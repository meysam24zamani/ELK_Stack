input {
    beats {
    port => 5044
    }
}
filter {
  json {
    source => "message"
  }
#  if [type] == "sometype1" {
#    grok {
#      match => { "message" => "\A[%{SYSLOGTIMESTAMP:syslog_timestamp}] %{WORD:app-info} {%{WORD:services}: {%{WORD:names}:%{WORD:biomeds},%{NUMBER:version-number}:%{DATA:pan_type},%{GREEDYDATA:message}\z" }
#      overwrite => [ "message" ]
#    }
#  }
#  else if [type] == "sometype2" {
#    grok {
#      match => { "message" => "\A[%{SYSLOGTIMESTAMP:syslog_timestamp}]" }
#    }
#  }
  mutate {
    remove_field => ["input", "agent", "ecs", "host", "log", "message", "@version"]
  }

  #{"CHROM":"1","POS":100721,"ID":".","REF":"GA","ALT":"G","QUAL":"40.6","FILTER":"PASS","INFO":"AC=1;A
#  grok {
  #  patterns_dir => ["./patterns"]
#    match => { "message" => "\{\"%{WORD}\":\"%{NUMBER:CHROM}\",\"%{WORD}\":%{NUMBER:POS},\"%{WORD}\":\".\",\"%{WORD}\":\"%{WORD:REF}\",\"%{WORD}\":\"%{WORD:ALT}\",\"%{WORD}\":\"%{NUMBER:QUAL}\",\"%{WORD}\":\"%{WORD:FILTER}\",\"%{WORD}\":\"%{DATA:INFO}\",\"%{WORD}\":\"%{DATA:FORMAT}\",\"%{WORD}\":\"%{DATA:FORMAT_Values}\",\"%{WORD}\":\"%{WORD:pipeline_name}\",\"%{WORD}\":\"%{DATA:pipeline_version}\",\"%{WORD}\":\"%{GREEDYDATA:vcf_headers}\",\"%{WORD}\":%{NUMBER:vcf_row}\}" }
#  }
  
  
  
  
  #with time pare =>>>> \[%{DATE:login_date} %{NOTSPACE:login_time}\] %{WORD}.%{WORD}: \{\"%{WORD}\":\{\"%{WORD}\":\"%{WORD:microservice}\",\"%{WORD}\":\"%{NUMBER}.0\"\},\"%{WORD}\":\[\],\"%{WORD}\":\{\"%{WORD}\":\"%{WORD} %{WORD:action}\",\"%{WORD}\":\"(?<user_login>[a-zA-Z0-9_.+=:-]+@[0-9A-Za-z][0-9A-Za-z-]{0,62}(?:\.(?:[0-9A-Za-z][0-‌​9A-Za-z-]{0,62}))*)\",\"%{WORD}\":\"%{WORD}\"\},\"%{WORD}\":\"%{WORD:environment}\"\} \[\] \[\]

}

output {
    stdout { codec => rubydebug }
    elasticsearch {
        hosts => "https://888afce593444c7e87fc23868e40ca95.eu-west-1.aws.found.io:9243"
          user => "elastic"
          password => "ekiQM9uillM22Y76R3YfCpco"
        index => "vcf_logs_with_logstash"
    }
}