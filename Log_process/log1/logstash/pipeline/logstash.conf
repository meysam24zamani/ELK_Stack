input {
    beats {
    port => 5044
    }
}
filter {
  json {
    source => "message"
  }
#  if [type] == "sometype1" {
#    grok {
#      match => { "message" => "\A[%{SYSLOGTIMESTAMP:syslog_timestamp}] %{WORD:app-info} {%{WORD:services}: {%{WORD:names}:%{WORD:biomeds},%{NUMBER:version-number}:%{DATA:pan_type},%{GREEDYDATA:message}\z" }
#      overwrite => [ "message" ]
#    }
#  }
#  else if [type] == "sometype2" {
#    grok {
#      match => { "message" => "\A[%{SYSLOGTIMESTAMP:syslog_timestamp}]" }
#    }
#  }
  mutate {
    remove_field => ["input", "agent", "input", "tags", "ecs", "host", "@version", "log", "offset", "file"]
  }
  #[2019-05-15 10:28:33] app.INFO: {"service":{"name":"Biomed","version":"1.5.0"},"user":[],"action":{"description":"User login","email":"jordi.cami@genomcore.com","code":"login_user"},"environment":"test"} [] []
  grok {
  #  patterns_dir => ["./patterns"]
    match => { "message" => "\[%{NOTSPACE:login_date} %{NOTSPACE:login_time}\] %{WORD}.%{WORD}: \{\"%{WORD}\":\{\"%{WORD}\":\"%{WORD:microservice}\",\"%{WORD}\":\"%{NUMBER}.0\"\},\"%{WORD}\":\[\],\"%{WORD}\":\{\"%{WORD}\":\"%{WORD} %{WORD:action}\",\"%{WORD}\":\"(?<user_login>[a-zA-Z0-9_.+=:-]+@[0-9A-Za-z][0-9A-Za-z-]{0,62}(?:\.(?:[0-9A-Za-z][0-‌​9A-Za-z-]{0,62}))*)\",\"%{WORD}\":\"%{WORD}\"\},\"%{WORD}\":\"%{WORD:environment}\"\} \[\] \[\]" }
  }
  
  #with time pare =>>>> \[%{DATE:login_date} %{NOTSPACE:login_time}\] %{WORD}.%{WORD}: \{\"%{WORD}\":\{\"%{WORD}\":\"%{WORD:microservice}\",\"%{WORD}\":\"%{NUMBER}.0\"\},\"%{WORD}\":\[\],\"%{WORD}\":\{\"%{WORD}\":\"%{WORD} %{WORD:action}\",\"%{WORD}\":\"(?<user_login>[a-zA-Z0-9_.+=:-]+@[0-9A-Za-z][0-9A-Za-z-]{0,62}(?:\.(?:[0-9A-Za-z][0-‌​9A-Za-z-]{0,62}))*)\",\"%{WORD}\":\"%{WORD}\"\},\"%{WORD}\":\"%{WORD:environment}\"\} \[\] \[\]

}

output {
    stdout { codec => rubydebug }
    elasticsearch {
        hosts => "10.2.100.17:9200"
        index => "logs-test-final"
    }
}